
[gcode_macro PRINT_START]   
gcode:
    # Frame_Light_ON
    Part_Light_ON
    BED_MESH_CLEAR
    SET_GCODE_OFFSET Z=0
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}
    {% set BED_MESH = params.BED_MESH|default('adaptive')|string %} ; One of: adaptive (default), full, default (or any other value as the bed mesh profile name), none
    {% set PREHEAT_TEMP = params.PREHEAT_TEMP|default(150)|float %}
    {% set WAIT_TIME = params.WAIT_TIME|default(60000)|float %}

    _SET_TIMELAPSE_SETUP enable=True
    SET_BED_TEMPERATURE TARGET={BED_TEMP}                           ; Heat Bed to target temp
    G28 X Y Z   ; home axes
    
    G0 Z2  
    M109 S{PREHEAT_TEMP}                                                        
    M190 S{BED_TEMP}  ; Waits until the bed reaches close to target
    G4 P{WAIT_TIME}

    #z - tilit
    Z_TILT_ADJUST
    #set final z offset
    SET_GCODE_OFFSET Z=0
    PROBE PROBE_METHOD=CONTACT CALIBRATE=1    ; calibrate z offset and beacon model hot
    Z_OFFSET_APPLY_PROBE
    
    #create bed mesh
    {% if BED_MESH == 'full' %}
    BED_MESH_CALIBRATE
    {% elif BED_MESH == 'adaptive' %}
    BED_MESH_CALIBRATE ADAPTIVE=1 ADAPTIVE_MARGIN=10
    {% endif %}

    #extruder to temp
    M109 S{EXTRUDER_TEMP}                                                    ; Move Z Axis up 
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP-4} MAXIMUM={EXTRUDER_TEMP+10}  ; Wait for extruder to reach near target temperature
    LINE_PURGE                                                      ; KAMP Line Purge near print
    M117 Printing           
    #start printing

[gcode_macro dry_START]   
gcode:
    PRINT_START BED_TEMP=0 EXTRUDER_TEMP=0 PREHEAT_TEMP=0 WAIT_TIME=0 BED_MESH=full

[gcode_macro PRINT_END]
gcode:
    Frame_Light_OFF
    Part_Light_OFF
    M400                    ; wait for buffer to clear
    G92 E0                  ; zero the extruder
    G91                     ; Relative positioning
    G1 X5 Y5 F3000          ; Wipe out
    G1 E-15 Z0.2 F1600       ; Retract and raise Z
    TURN_OFF_HEATERS
    G1 Z100 F3000             ; Raise Z more
    G90                     ; Absolute positioning
    G1 X-3 Y220            ; Present print
    M107                    ; turn off fan
    M84                     ; turn off steppers
    # SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
    TIMELAPSE_RENDER

#############################################################################
#   Pause, Resume & Cancel Macros
#############################################################################

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
  # PAUSE_TUNE
  {% set z = params.Z|default(30)|int %}                                                   ; z hop amount 30mm
  {% if printer['pause_resume'].is_paused|int == 0 %}
      SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
      SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
      # SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                  ; disable filament sensor
      SAVE_GCODE_STATE NAME=PAUSE                                                          ; save the current print position for resume, before z-hop
      BASE_PAUSE                                                                           ; pause print
      G91                                                                           
      {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
          G1 E-2 F2700                                                                     ; Retract 2mm
          G1 X3 Y3 F3000                                                                   ; Wipe out 
          G1 E-2 Z{z} F1600                                                                ; Retract 2mm more & raise z by z hop amount 
          SAVE_GCODE_STATE NAME=ZLIFT                                                      ; save the current print position for resume, after z-hop
      {% else %}
          { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
          SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
          G1 E-2 F2700                                                                     ; Retract 2mm
          G1 X3 Y3 F3000                                                                   ; Wipe out 
          G1 E-2 F1600                                                                     ; Retract 2mm more
          SAVE_GCODE_STATE NAME=ZLIFT
      {% endif %}
      G90
      G1 X{-3} Y{220-2} F6000   ; park toolhead at the rear left of the bed
      SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save the parked position
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET=160                                    ; cool down hotend to no-drip temp
      SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set idle timeout to 12 hours (in seconds)
  {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
  {% if printer['pause_resume'].is_paused|int == 1 %}
      # SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1                           ; enable filament sensor
      SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}   ; set timeout back to configured value
      {% if etemp > 0 %}
          SET_HEATER_TEMPERATURE HEATER=extruder TARGET={etemp|int}
          TEMPERATURE_WAIT SENSOR=extruder MINIMUM={etemp|int - 4} MAXIMUM={etemp|int + 10}  ; wait for hotend to heat back up to print temp
      {% endif %}
      RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                      ; go back to park position in case toolhead was moved during pause                                                                        ; enable extruder stepper motor
      G91                                                                           ; relative positioning
      M83                                                                           ; set extruder to relative mode
      G1 E50  F200                                                                  ; extrude 80mm of filament to prime the nozzle
      G4 P2000                                                                      ; wait for 2 seconds to stabilise pressure
      G1 X20 F15000                                                                 ; wiggle movement to ensure free movement of purge
      G1 X-20
      G1 X20
      G1 X-20
      G1 X20
      G1 X-20
      RESTORE_GCODE_STATE NAME=ZLIFT MOVE=1 MOVE_SPEED=60                           ; restore to the zlift position above the print
      G1 X-3 Y-3 F3000                                                              ; Undo the pause Wipe out 
      G1 Z{zhop * -1} F900  
      RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                           ; restore to the paused position (lowers to final print location)
      M400                                                                          ; wait for all moves to complete
      BASE_RESUME                                                                   ; resume print
  {% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}      ; set timeout back to configured value
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  PRINT_END
  BASE_CANCEL_PRINT


#############################################################################
#   Filament Sensor & Change Macros
#############################################################################

[filament_switch_sensor filament_sensor]
switch_pin: PC3
pause_on_runout: false
runout_gcode:
  PAUSE # [pause_resume] is required in printer.cfg
  M117 Filament switch runout
insert_gcode:
  M117 Filament switch inserted

[filament_motion_sensor encoder_sensor]
switch_pin: PA12
detection_length: 2.88
extruder: extruder
pause_on_runout: false
runout_gcode:
  PAUSE # [pause_resume] is required in printer.cfg
  M117 Filament encoder runout
insert_gcode:
  M117 Filament encoder inserted

[delayed_gcode DISABLE_FILAMENT_SENSOR]
initial_duration: 1
gcode:
  SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
  SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0

# [gcode_macro M600]
# description: Pause for colour change
# gcode:
#   PAUSE
#   UNLOAD_FILAMENT

[gcode_macro LOAD_FILAMENT]
#need to know which filament to load???
variable_load_distance:  100
variable_purge_distance:  20
gcode:
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=200
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM={200-4} MAXIMUM={200+40}
  {% set speed = params.SPEED|default(300) %}
  {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 30 %}
  SAVE_GCODE_STATE NAME=load_state
  G91
  G92 E0
  G1 E{load_distance} F{max_velocity}          ; fast-load
  G1 E{purge_distance} F{speed}                ; purge
  RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
#need to figure out how to change the active toolhead
variable_unload_distance:  100
variable_purge_distance:  10
gcode:
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=210
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM={200-4} MAXIMUM={200+40}
  {% set speed = params.SPEED|default(300) %}
  {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 30 %}
  SAVE_GCODE_STATE NAME=unload_state
  G91
  G92 E0
  G1 E{purge_distance} F{speed}                ; purge
  G1 E-{unload_distance} F{max_velocity}       ; fast-unload
  RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro PID_Tune_EXTRUDER]
gcode:
  {% set temperature = params.TEMPERATURE|default(210) %}
  CG28
  M106 S255
  PID_CALIBRATE HEATER=extruder TARGET={temperature}
  SAVE_CONFIG

[gcode_macro PID_Tune_BED]
gcode:
  {% set temperature = params.TEMPERATURE|default(60) %}
  CG28
  M106 S255 ;Sets Print Fans to 100%
  PID_CALIBRATE HEATER=heater_bed TARGET={temperature}
  SAVE_CONFIG 
      
[gcode_macro Auto_Resonance_Tuning]
gcode:
  CG28
  SHAPER_CALIBRATE

[gcode_macro Bed_Level_Screws_Tune]
gcode:
      BED_MESH_CLEAR
      SET_BED_TEMPERATURE TARGET=60
      BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
      CG28
      SCREWS_TILT_CALCULATE

[gcode_macro Calibrate_Probe_Z_Offset]
gcode:
      CG28
      BEACON_AUTO_CALIBRATE
      
[gcode_macro Auto_Full_Bed_Level]
gcode:
      RESPOND PREFIX="info" MSG="Running Custom Bed Leveling Macro"
      BED_MESH_CLEAR
      SET_BED_TEMPERATURE TARGET=60
      BED_TEMPERATURE_WAIT MINIMUM=58 MAXIMUM=65
      CG28
      BED_MESH_CALIBRATE

# [delayed_gcode bed_mesh_init]
# initial_duration: .01
# gcode:
#     BED_MESH_PROFILE LOAD=default

[gcode_macro Axis_Twist_Comp_Tune]
gcode:    
      CG28
      AXIS_TWIST_COMPENSATION_CALIBRATE

[gcode_macro Gantry_tilt]
gcode:    
      CG28
      Z_TILT_ADJUST

[gcode_macro CG28]
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
      G28
  {% else %}
  {% endif %}

[gcode_macro SET_BED_TEMPERATURE]
gcode:
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={params.TARGET}

[gcode_macro BED_TEMPERATURE_WAIT]
gcode:
    {% if params.MINIMUM is defined and params.MAXIMUM is defined %}
      TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM} MAXIMUM={params.MAXIMUM}
    {% elif params.MINIMUM is defined %}
      TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM}
    {% elif params.MAXIMUM is defined %}
      TEMPERATURE_WAIT SENSOR=heater_bed MAXIMUM={params.MAXIMUM}
    {% else %}
      RESPOND TYPE=error MSG="Error on 'BED_TEMPERATURE_WAIT': missing MINIMUM or MAXIMUM."
    {% endif %}

[gcode_macro Frame_Light_ON]
gcode:
  SET_PIN PIN=Frame_Light VALUE=1

[gcode_macro Frame_Light_OFF]
gcode:
  SET_PIN PIN=Frame_Light VALUE=0

[gcode_macro Part_Light_ON]
gcode:
  SET_PIN PIN=Part_Light VALUE=1

[gcode_macro Part_Light_OFF]
gcode:
  SET_PIN PIN=Part_Light VALUE=0